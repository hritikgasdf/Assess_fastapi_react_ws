version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: hotel_ops_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hotel_ops
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d hotel_ops"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - hotel_network
    restart: unless-stopped

  # FastAPI Backend with Auto-Seeding
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: hotel_ops_backend
    ports:
      - "8000:8000"
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://postgres:postgres@db:5432/hotel_ops
      
      # JWT Configuration
      SECRET_KEY: 09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      
      # Python Configuration
      PYTHONUNBUFFERED: 1
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
    networks:
      - hotel_network
    restart: unless-stopped
    command: >
      sh -c "
        echo '‚è≥ Waiting for database to be ready...' &&
        sleep 3 &&
        echo 'üå± Seeding database...' &&
        python seed_data.py &&
        echo 'üöÄ Starting FastAPI server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hotel_ops_frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_WS_URL=ws://localhost:8000
      - NODE_ENV=development
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - hotel_network
    restart: unless-stopped
    command: npm run dev -- --host 0.0.0.0
    stdin_open: true
    tty: true

networks:
  hotel_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  backend_logs:
    driver: local
  postgres_data:
